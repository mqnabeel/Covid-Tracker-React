{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","components/CountryPicker/CountryPicker.jsx","api/index.js","components/Charts/Charts.jsx","images/covid.png","App.js","index.js","App.module.css","components/CountryPicker/CountryPicker.module.css","components/Charts/Charts.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","varient","start","end","value","duration","separator","Date","toDateString","CountryPicker","handleCountryChange","useState","fetchedCountries","setFetchedCountries","useEffect","a","fetchcountires","fetchAPI","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","map","country","i","url","fetchData","changeableUrl","axios","get","console","log","fetchDailyData","modifiedData","dailyData","total","date","reportDate","countries","name","Charts","setDailyData","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","App","state","fetchedData","setState","this","image","src","coronaImage","alt","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8d0afbae.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__2os__\",\"card\":\"Cards_card__1WK9N\",\"infected\":\"Cards_infected__3gZI-\",\"recovered\":\"Cards_recovered__2UsLq\",\"deaths\":\"Cards_deaths__D54U-\"};","import React from 'react';\r\nimport {Card ,CardContent , Typography , Grid } from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\nimport styles from './Cards.module.css';\r\n const Cards = ({data :{confirmed , recovered , deaths , lastUpdate}}) => {\r\n     if (!confirmed) {\r\n         return 'Loading....';\r\n     }\r\n    return (\r\n        <div className={styles.container}>\r\n            <Grid container spacing={3} justify=\"center\">\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Infected\r\n                        </Typography>\r\n                        <Typography varient =\"h5\">\r\n                            <CountUp \r\n                            start={0}\r\n                            end={confirmed.value}\r\n                            duration={2.5}\r\n                            separator=\",\"\r\n                            />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">\r\n                            {new Date(lastUpdate).toDateString()}\r\n                        </Typography>\r\n                        <Typography varient=\"body2\" >\r\n                            Number of Active Cases of covid-19\r\n                        </Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Recovered\r\n                        </Typography>\r\n                        <Typography varient =\"h5\">\r\n                            <CountUp \r\n                            start={0}\r\n                            end={recovered.value}\r\n                            duration={2.5}\r\n                            separator=\",\"\r\n                            />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">\r\n                            {new Date(lastUpdate).toDateString()}\r\n                        </Typography>\r\n                        <Typography varient=\"body2\" >\r\n                            Number of Recovered Cases of covid-19\r\n                        </Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Deaths\r\n                        </Typography>\r\n                        <Typography varient =\"h5\">\r\n                            <CountUp \r\n                            start={0}\r\n                            end={deaths.value}\r\n                            duration={2.5}\r\n                            separator=\",\"\r\n                            />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">\r\n                            {new Date(lastUpdate).toDateString()}\r\n                        </Typography>\r\n                        <Typography varient=\"body2\" >\r\n                            Number of Death Cases of covid-19\r\n                        </Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards;","import React,{useState, useEffect} from 'react';\r\nimport { NativeSelect, FormControl, StylesProvider } from \"@material-ui/core\";\r\n\r\nimport { fetchcountires  } from \"../../api\";\r\n\r\nimport styles from './CountryPicker.module.css';\r\n\r\nconst CountryPicker = ({handleCountryChange}) => {\r\n    const[fetchedCountries,setFetchedCountries]=useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () =>{\r\n            setFetchedCountries(await fetchcountires());\r\n        }\r\n        \r\n        fetchAPI();\r\n    },[setFetchedCountries]);\r\n\r\n   \r\n    \r\n    return (\r\n        <FormControl className={styles.formControl}>\r\n            <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n                <option value=\"\">Global</option>\r\n                {fetchedCountries.map((country,i)=> <option key={i} value={country}>{country}</option> )}\r\n            </NativeSelect>\r\n        </FormControl>\r\n        \r\n    )\r\n}\r\n\r\nexport default CountryPicker;","import axios from 'axios';\r\nimport CountryPicker from '../components/CountryPicker/CountryPicker';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country) =>{\r\n    let changeableUrl = url ;\r\n    if(country){\r\n        changeableUrl =`${url}/countries/${country}`;\r\n    }\r\n    try{\r\n        const {data :{confirmed , recovered , deaths ,lastUpdate}} = await axios.get(changeableUrl);\r\n       \r\n        \r\n        return {confirmed , recovered,deaths,lastUpdate,};\r\n    }catch(error){\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const fetchDailyData = async()=>{\r\n    try {\r\n        const {data}=await axios.get(`${url}/daily`);\r\n        \r\n        const modifiedData = data.map((dailyData) =>({\r\n            confirmed:dailyData.confirmed.total,\r\n            deaths:dailyData.deaths.total,\r\n            date:dailyData.reportDate,\r\n        }));\r\n\r\n        return modifiedData;\r\n\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\nexport const fetchcountires = async () =>{\r\n    try{\r\n        const {data : {countries} } = await axios.get(`${url}/countries`);\r\n\r\n        \r\n\r\n        return countries.map((country)=>country.name);\r\n        \r\n    }catch(error){\r\n        console.log(error);\r\n    }\r\n}","import React,{useState,useEffect} from 'react'\r\nimport {fetchDailyData} from '../../api';\r\nimport {Line ,Bar} from 'react-chartjs-2';\r\n\r\n\r\nimport styles from './Charts.module.css';\r\n\r\nconst Charts = ({data : {confirmed , deaths , recovered} , country}) => {\r\n    const[dailyData,setDailyData] = useState([]);\r\n    useEffect(()=>{\r\n        const fetchAPI = async () =>{\r\n           setDailyData(await fetchDailyData());\r\n        }\r\n\r\n        \r\n\r\n        fetchAPI();\r\n    }, []);\r\n\r\n    const lineChart =(\r\n        dailyData.length\r\n        ?(\r\n            <Line\r\n            data={{\r\n                labels:dailyData.map(({ date })=> date),\r\n                datasets:[{\r\n                    data: dailyData.map(({confirmed})=>confirmed),\r\n                    label: 'Infected',\r\n                    borderColor:'#3333ff',\r\n                    fill:true,\r\n\r\n                },{\r\n                    data: dailyData.map(({deaths})=>deaths),\r\n                    label: 'Deaths',\r\n                    borderColor:'red',\r\n                    backgroundColor:'rgba(255,0,0,0.5',\r\n                    fill:true,\r\n\r\n                }],\r\n            }}\r\n            />):null\r\n        );\r\n\r\n\r\n        console.log(confirmed ,recovered , deaths);\r\n const barChart =(\r\n     confirmed\r\n     ?(\r\n         <Bar \r\n         data={{\r\n             labels : ['Infected', 'Recovered','Deaths'],\r\n             datasets:[{\r\n                 label:'people',\r\n                 backgroundColor:[\r\n                     'rgba(0,0,255,0.5)',\r\n                     'rgba(0,255,0,0.5)',\r\n                     'rgba(255,0,0,0.5)',\r\n                 ],\r\n                 data:[confirmed.value ,recovered.value , deaths.value]\r\n             }]\r\n         }}\r\n         options={{\r\n             legend:{display : false},\r\n             title:{display: true , text : `Current state in ${country}`},\r\n\r\n         }}\r\n         />\r\n\r\n     ): null\r\n )\r\n    return (\r\n        \r\n      <div className={styles.container}>\r\n          {country ? barChart : lineChart}\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Charts;","export default __webpack_public_path__ + \"static/media/covid.9e5d4fc7.png\";","import React from 'react';\r\nimport {Cards , Charts , CountryPicker} from './components';\r\nimport styles from './App.module.css';\r\nimport {fetchData} from './api';\r\n\r\nimport coronaImage from './images/covid.png';\r\n\r\nclass App extends React.Component {\r\n\r\n    state ={\r\n        data:{},\r\n        country :'',\r\n    }\r\n\r\n    async componentDidMount(){\r\n        const fetchedData = await fetchData();\r\n\r\n        this.setState({data : fetchedData});\r\n       \r\n    }\r\n\r\n    handleCountryChange = async (country) =>{\r\n        const fetchedData = await fetchData(country);\r\n       \r\n       \r\n        //fetch teh data\r\n\r\n        //set the state\r\n        this.setState({data : fetchedData , country : country});\r\n    }\r\n\r\n    render(){\r\n        const {data ,country}= this.state;\r\n\r\n        return(\r\n            <div className={styles.container}>\r\n                <img className={styles.image} src={coronaImage} alt=\"Covid-19\"/>\r\n               <Cards data={data} />\r\n               <CountryPicker handleCountryChange={this.handleCountryChange}/>\r\n               <Charts data={data}  country ={country}/> \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App  from './App';\r\n\r\nReactDOM.render(<App />,document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3c0Ll\",\"image\":\"App_image__rckr2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__3fexP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Charts_container__3K6CV\"};"],"sourceRoot":""}