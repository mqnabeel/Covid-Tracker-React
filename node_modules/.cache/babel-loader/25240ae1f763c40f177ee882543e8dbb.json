{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\mnqna\\\\OneDrive\\\\Desktop\\\\bct2020\\\\covid-tracker\\\\src\\\\components\\\\Charts\\\\Charts.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { fetchDailyData } from '../../api';\nimport { Line, Bar } from 'react-chartjs-2';\nimport styles from './Charts.module.css';\n\nconst Charts = ({\n  data: {\n    confirmed,\n    deaths,\n    recovered\n  },\n  country\n}) => {\n  _s();\n\n  const [dailyData, setDailyData] = useState([]);\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setDailyData(await fetchDailyData());\n    };\n\n    fetchAPI();\n  });\n  const lineChart = dailyData.length ? /*#__PURE__*/_jsxDEV(Line, {\n    data: {\n      labels: dailyData.map(({\n        date\n      }) => date),\n      datasets: [{\n        data: dailyData.map(({\n          confirmed\n        }) => confirmed),\n        label: 'Infected',\n        borderColor: '#3333ff',\n        fill: true\n      }, {\n        data: dailyData.map(({\n          deaths\n        }) => deaths),\n        label: 'Deaths',\n        borderColor: 'red',\n        backgroundColor: 'rgba(255,0,0,0.5',\n        fill: true\n      }]\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 13\n  }, this) : null;\n  const barChart = confirmed ? /*#__PURE__*/_jsxDEV(Bar, {\n    data: {\n      labels: ['Infected', 'Recovered', 'Deaths'],\n      datasets: [{\n        label: 'people',\n        backgroundColor: ['rgba(0,255,0,0.5)', 'rgba(0,255,0,0.5)', 'rgba(255,0,0,0.5)'],\n        data: [confirmed, recovered, deaths]\n      }]\n    },\n    options: {\n      legend: {\n        display: false\n      },\n      title: {\n        display: true,\n        text: `Current state in ${country}`\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 10\n  }, this) : null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: country ? barChart : lineChart\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Charts, \"Qu7aM2UtjsY9ajXU9lE2aj09jL8=\");\n\n_c = Charts;\nexport default Charts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Charts\");","map":{"version":3,"sources":["C:/Users/mnqna/OneDrive/Desktop/bct2020/covid-tracker/src/components/Charts/Charts.jsx"],"names":["React","useState","useEffect","fetchDailyData","Line","Bar","styles","Charts","data","confirmed","deaths","recovered","country","dailyData","setDailyData","fetchAPI","lineChart","length","labels","map","date","datasets","label","borderColor","fill","backgroundColor","barChart","legend","display","title","text","container"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,SAAQC,cAAR,QAA6B,WAA7B;AACA,SAAQC,IAAR,EAAcC,GAAd,QAAwB,iBAAxB;AAGA,OAAOC,MAAP,MAAmB,qBAAnB;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAACC,EAAAA,IAAI,EAAG;AAACC,IAAAA,SAAD;AAAaC,IAAAA,MAAb;AAAsBC,IAAAA;AAAtB,GAAR;AAA2CC,EAAAA;AAA3C,CAAD,KAAyD;AAAA;;AACpE,QAAK,CAACC,SAAD,EAAWC,YAAX,IAA2Bb,QAAQ,CAAC,EAAD,CAAxC;AACAC,EAAAA,SAAS,CAAC,MAAI;AACV,UAAMa,QAAQ,GAAG,YAAW;AACzBD,MAAAA,YAAY,CAAC,MAAMX,cAAc,EAArB,CAAZ;AACF,KAFD;;AAMAY,IAAAA,QAAQ;AACX,GARQ,CAAT;AAUA,QAAMC,SAAS,GACXH,SAAS,CAACI,MAAV,gBAEI,QAAC,IAAD;AACA,IAAA,IAAI,EAAE;AACFC,MAAAA,MAAM,EAACL,SAAS,CAACM,GAAV,CAAc,CAAC;AAAEC,QAAAA;AAAF,OAAD,KAAaA,IAA3B,CADL;AAEFC,MAAAA,QAAQ,EAAC,CAAC;AACNb,QAAAA,IAAI,EAAEK,SAAS,CAACM,GAAV,CAAc,CAAC;AAACV,UAAAA;AAAD,SAAD,KAAeA,SAA7B,CADA;AAENa,QAAAA,KAAK,EAAE,UAFD;AAGNC,QAAAA,WAAW,EAAC,SAHN;AAINC,QAAAA,IAAI,EAAC;AAJC,OAAD,EAMP;AACEhB,QAAAA,IAAI,EAAEK,SAAS,CAACM,GAAV,CAAc,CAAC;AAACT,UAAAA;AAAD,SAAD,KAAYA,MAA1B,CADR;AAEEY,QAAAA,KAAK,EAAE,QAFT;AAGEC,QAAAA,WAAW,EAAC,KAHd;AAIEE,QAAAA,eAAe,EAAC,kBAJlB;AAKED,QAAAA,IAAI,EAAC;AALP,OANO;AAFP;AADN;AAAA;AAAA;AAAA;AAAA,UAFJ,GAoBQ,IArBZ;AAuBH,QAAME,QAAQ,GACVjB,SAAS,gBAEL,QAAC,GAAD;AACA,IAAA,IAAI,EAAE;AACFS,MAAAA,MAAM,EAAG,CAAC,UAAD,EAAa,WAAb,EAAyB,QAAzB,CADP;AAEFG,MAAAA,QAAQ,EAAC,CAAC;AACNC,QAAAA,KAAK,EAAC,QADA;AAENG,QAAAA,eAAe,EAAC,CACZ,mBADY,EAEZ,mBAFY,EAGZ,mBAHY,CAFV;AAONjB,QAAAA,IAAI,EAAC,CAACC,SAAD,EAAYE,SAAZ,EAAwBD,MAAxB;AAPC,OAAD;AAFP,KADN;AAaA,IAAA,OAAO,EAAE;AACLiB,MAAAA,MAAM,EAAC;AAACC,QAAAA,OAAO,EAAG;AAAX,OADF;AAELC,MAAAA,KAAK,EAAC;AAACD,QAAAA,OAAO,EAAE,IAAV;AAAiBE,QAAAA,IAAI,EAAI,oBAAmBlB,OAAQ;AAApD;AAFD;AAbT;AAAA;AAAA;AAAA;AAAA,UAFK,GAsBN,IAvBP;AAyBG,sBAEE;AAAK,IAAA,SAAS,EAAEN,MAAM,CAACyB,SAAvB;AAAA,cACKnB,OAAO,GAAGc,QAAH,GAAcV;AAD1B;AAAA;AAAA;AAAA;AAAA,UAFF;AAMH,CAlED;;GAAMT,M;;KAAAA,M;AAoEN,eAAeA,MAAf","sourcesContent":["import React,{useState,useEffect} from 'react'\r\nimport {fetchDailyData} from '../../api';\r\nimport {Line ,Bar} from 'react-chartjs-2';\r\n\r\n\r\nimport styles from './Charts.module.css';\r\n\r\nconst Charts = ({data : {confirmed , deaths , recovered} , country}) => {\r\n    const[dailyData,setDailyData] = useState([]);\r\n    useEffect(()=>{\r\n        const fetchAPI = async () =>{\r\n           setDailyData(await fetchDailyData());\r\n        }\r\n\r\n        \r\n\r\n        fetchAPI();\r\n    });\r\n\r\n    const lineChart =(\r\n        dailyData.length\r\n        ?(\r\n            <Line\r\n            data={{\r\n                labels:dailyData.map(({ date })=> date),\r\n                datasets:[{\r\n                    data: dailyData.map(({confirmed})=>confirmed),\r\n                    label: 'Infected',\r\n                    borderColor:'#3333ff',\r\n                    fill:true,\r\n\r\n                },{\r\n                    data: dailyData.map(({deaths})=>deaths),\r\n                    label: 'Deaths',\r\n                    borderColor:'red',\r\n                    backgroundColor:'rgba(255,0,0,0.5',\r\n                    fill:true,\r\n\r\n                }],\r\n            }}\r\n            />):null\r\n        );\r\n const barChart =(\r\n     confirmed\r\n     ?(\r\n         <Bar \r\n         data={{\r\n             labels : ['Infected', 'Recovered','Deaths'],\r\n             datasets:[{\r\n                 label:'people',\r\n                 backgroundColor:[\r\n                     'rgba(0,255,0,0.5)',\r\n                     'rgba(0,255,0,0.5)',\r\n                     'rgba(255,0,0,0.5)',\r\n                 ],\r\n                 data:[confirmed ,recovered , deaths]\r\n             }]\r\n         }}\r\n         options={{\r\n             legend:{display : false},\r\n             title:{display: true , text : `Current state in ${country}`},\r\n\r\n         }}\r\n         />\r\n\r\n     ): null\r\n )\r\n    return (\r\n        \r\n      <div className={styles.container}>\r\n          {country ? barChart : lineChart}\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Charts;"]},"metadata":{},"sourceType":"module"}