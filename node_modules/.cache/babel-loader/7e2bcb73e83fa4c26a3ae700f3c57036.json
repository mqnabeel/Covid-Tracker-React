{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/mnqna/OneDrive/Desktop/bct2020/covid-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/mnqna/OneDrive/Desktop/bct2020/covid-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:/Users/mnqna/OneDrive/Desktop/bct2020/covid-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsx as _jsx}from\"react/jsx-runtime\";import React,{useState,useEffect}from'react';import{fetchDailyData}from'../../api';import{Line,Bar}from'react-chartjs-2';import styles from'./Charts.module.css';var Charts=function Charts(_ref){var _ref$data=_ref.data,confirmed=_ref$data.confirmed,deaths=_ref$data.deaths,recovered=_ref$data.recovered,country=_ref.country;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),dailyData=_useState2[0],setDailyData=_useState2[1];useEffect(function(){var fetchAPI=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.t0=setDailyData;_context.next=3;return fetchDailyData();case 3:_context.t1=_context.sent;(0,_context.t0)(_context.t1);case 5:case\"end\":return _context.stop();}}},_callee);}));return function fetchAPI(){return _ref2.apply(this,arguments);};}();fetchAPI();},[]);var lineChart=dailyData.length?/*#__PURE__*/_jsx(Line,{data:{labels:dailyData.map(function(_ref3){var date=_ref3.date;return date;}),datasets:[{data:dailyData.map(function(_ref4){var confirmed=_ref4.confirmed;return confirmed;}),label:'Infected',borderColor:'#3333ff',fill:true},{data:dailyData.map(function(_ref5){var deaths=_ref5.deaths;return deaths;}),label:'Deaths',borderColor:'red',backgroundColor:'rgba(255,0,0,0.5',fill:true}]}}):null;console.log(confirmed,recovered,deaths);var barChart=confirmed?/*#__PURE__*/_jsx(Bar,{data:{labels:['Infected','Recovered','Deaths'],datasets:[{label:'people',backgroundColor:['rgba(0,0,255,0.5)','rgba(0,255,0,0.5)','rgba(255,0,0,0.5)'],data:[confirmed.value,recovered.value,deaths.value]}]},options:{legend:{display:false},title:{display:true,text:\"Current state in \".concat(country)}}}):null;return/*#__PURE__*/_jsx(\"div\",{className:styles.container,children:country?barChart:lineChart});};export default Charts;","map":{"version":3,"sources":["C:/Users/mnqna/OneDrive/Desktop/bct2020/covid-tracker/src/components/Charts/Charts.jsx"],"names":["React","useState","useEffect","fetchDailyData","Line","Bar","styles","Charts","data","confirmed","deaths","recovered","country","dailyData","setDailyData","fetchAPI","lineChart","length","labels","map","date","datasets","label","borderColor","fill","backgroundColor","console","log","barChart","value","legend","display","title","text","container"],"mappings":"4iBAAA,MAAOA,CAAAA,KAAP,EAAcC,QAAd,CAAuBC,SAAvB,KAAuC,OAAvC,CACA,OAAQC,cAAR,KAA6B,WAA7B,CACA,OAAQC,IAAR,CAAcC,GAAd,KAAwB,iBAAxB,CAGA,MAAOC,CAAAA,MAAP,KAAmB,qBAAnB,CAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,MAAyD,oBAAvDC,IAAuD,CAA/CC,SAA+C,WAA/CA,SAA+C,CAAnCC,MAAmC,WAAnCA,MAAmC,CAA1BC,SAA0B,WAA1BA,SAA0B,CAAbC,OAAa,MAAbA,OAAa,eACpCX,QAAQ,CAAC,EAAD,CAD4B,wCAC9DY,SAD8D,eACpDC,YADoD,eAEpEZ,SAAS,CAAC,UAAI,CACV,GAAMa,CAAAA,QAAQ,2FAAG,+IACdD,YADc,uBACKX,CAAAA,cAAc,EADnB,qHAAH,kBAARY,CAAAA,QAAQ,2CAAd,CAMAA,QAAQ,GACX,CARQ,CAQN,EARM,CAAT,CAUA,GAAMC,CAAAA,SAAS,CACXH,SAAS,CAACI,MAAV,cAEI,KAAC,IAAD,EACA,IAAI,CAAE,CACFC,MAAM,CAACL,SAAS,CAACM,GAAV,CAAc,mBAAGC,CAAAA,IAAH,OAAGA,IAAH,OAAaA,CAAAA,IAAb,EAAd,CADL,CAEFC,QAAQ,CAAC,CAAC,CACNb,IAAI,CAAEK,SAAS,CAACM,GAAV,CAAc,mBAAEV,CAAAA,SAAF,OAAEA,SAAF,OAAeA,CAAAA,SAAf,EAAd,CADA,CAENa,KAAK,CAAE,UAFD,CAGNC,WAAW,CAAC,SAHN,CAINC,IAAI,CAAC,IAJC,CAAD,CAMP,CACEhB,IAAI,CAAEK,SAAS,CAACM,GAAV,CAAc,mBAAET,CAAAA,MAAF,OAAEA,MAAF,OAAYA,CAAAA,MAAZ,EAAd,CADR,CAEEY,KAAK,CAAE,QAFT,CAGEC,WAAW,CAAC,KAHd,CAIEE,eAAe,CAAC,kBAJlB,CAKED,IAAI,CAAC,IALP,CANO,CAFP,CADN,EAFJ,CAoBQ,IArBZ,CAyBIE,OAAO,CAACC,GAAR,CAAYlB,SAAZ,CAAuBE,SAAvB,CAAmCD,MAAnC,EACP,GAAMkB,CAAAA,QAAQ,CACVnB,SAAS,cAEL,KAAC,GAAD,EACA,IAAI,CAAE,CACFS,MAAM,CAAG,CAAC,UAAD,CAAa,WAAb,CAAyB,QAAzB,CADP,CAEFG,QAAQ,CAAC,CAAC,CACNC,KAAK,CAAC,QADA,CAENG,eAAe,CAAC,CACZ,mBADY,CAEZ,mBAFY,CAGZ,mBAHY,CAFV,CAONjB,IAAI,CAAC,CAACC,SAAS,CAACoB,KAAX,CAAkBlB,SAAS,CAACkB,KAA5B,CAAoCnB,MAAM,CAACmB,KAA3C,CAPC,CAAD,CAFP,CADN,CAaA,OAAO,CAAE,CACLC,MAAM,CAAC,CAACC,OAAO,CAAG,KAAX,CADF,CAELC,KAAK,CAAC,CAACD,OAAO,CAAE,IAAV,CAAiBE,IAAI,4BAAuBrB,OAAvB,CAArB,CAFD,CAbT,EAFK,CAsBN,IAvBP,CAyBG,mBAEE,YAAK,SAAS,CAAEN,MAAM,CAAC4B,SAAvB,UACKtB,OAAO,CAAGgB,QAAH,CAAcZ,SAD1B,EAFF,CAMH,CArED,CAuEA,cAAeT,CAAAA,MAAf","sourcesContent":["import React,{useState,useEffect} from 'react'\r\nimport {fetchDailyData} from '../../api';\r\nimport {Line ,Bar} from 'react-chartjs-2';\r\n\r\n\r\nimport styles from './Charts.module.css';\r\n\r\nconst Charts = ({data : {confirmed , deaths , recovered} , country}) => {\r\n    const[dailyData,setDailyData] = useState([]);\r\n    useEffect(()=>{\r\n        const fetchAPI = async () =>{\r\n           setDailyData(await fetchDailyData());\r\n        }\r\n\r\n        \r\n\r\n        fetchAPI();\r\n    }, []);\r\n\r\n    const lineChart =(\r\n        dailyData.length\r\n        ?(\r\n            <Line\r\n            data={{\r\n                labels:dailyData.map(({ date })=> date),\r\n                datasets:[{\r\n                    data: dailyData.map(({confirmed})=>confirmed),\r\n                    label: 'Infected',\r\n                    borderColor:'#3333ff',\r\n                    fill:true,\r\n\r\n                },{\r\n                    data: dailyData.map(({deaths})=>deaths),\r\n                    label: 'Deaths',\r\n                    borderColor:'red',\r\n                    backgroundColor:'rgba(255,0,0,0.5',\r\n                    fill:true,\r\n\r\n                }],\r\n            }}\r\n            />):null\r\n        );\r\n\r\n\r\n        console.log(confirmed ,recovered , deaths);\r\n const barChart =(\r\n     confirmed\r\n     ?(\r\n         <Bar \r\n         data={{\r\n             labels : ['Infected', 'Recovered','Deaths'],\r\n             datasets:[{\r\n                 label:'people',\r\n                 backgroundColor:[\r\n                     'rgba(0,0,255,0.5)',\r\n                     'rgba(0,255,0,0.5)',\r\n                     'rgba(255,0,0,0.5)',\r\n                 ],\r\n                 data:[confirmed.value ,recovered.value , deaths.value]\r\n             }]\r\n         }}\r\n         options={{\r\n             legend:{display : false},\r\n             title:{display: true , text : `Current state in ${country}`},\r\n\r\n         }}\r\n         />\r\n\r\n     ): null\r\n )\r\n    return (\r\n        \r\n      <div className={styles.container}>\r\n          {country ? barChart : lineChart}\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Charts;"]},"metadata":{},"sourceType":"module"}